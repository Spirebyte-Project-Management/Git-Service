# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  Nuget_CustomFeedUserName: ${{ github.actor }}
  Nuget_CustomFeedPassword: ${{ secrets.NUGET_CUSTOMFEEDPASSWORD }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOTNET_VERSION: '6.0.x'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-test:
    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Begin Sonar scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        dotnet tool install --global dotnet-sonarscanner
        dotnet sonarscanner begin /k:"Spirebyte-Project-Management_Git-Service" /o:"spirebyte-project-management" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)\**\*.trx /d:sonar.cs.opencover.reportsPaths="$(Agent.TempDirectory)\**\opencover.xml"

    - name: Install dependencies
      run: |
        dotnet nuget add source --username ${{ env.Nuget_CustomFeedUserName }} --password ${{ env.Nuget_CustomFeedPassword }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/Spirebyte-Project-Management/index.json" 
        dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --blame --no-restore --verbosity normal --logger "trx;LogFileName=testResults.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=opencover.xml
     
    - name: End Sonar scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: dotnet sonarscanner end /d:sonar.login=${{ secrets.SONAR_TOKEN }}
      
  publish-image:
    runs-on: ubuntu-latest
    environment: Contabo vps
    needs: [build-and-test]
    if: needs.build-and-test.result == 'success'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./src/Spirebyte.Services.Git.API/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            Nuget_CustomFeedUserName=${{ env.Nuget_CustomFeedUserName }}
            Nuget_CustomFeedPassword=${{ env.Nuget_CustomFeedPassword }}

      - name: Deploy to environment
        uses: joelwmale/webhook-action@2.1.0
        with:
          url: ${{ secrets.WEBHOOK_URL }}
